[{"id":"1b630406.85671c","type":"tab","label":"Espesores VMA to Json Send Mqtt","disabled":false,"info":""},{"id":"e742e3.5fa76d2","type":"tcp in","z":"1b630406.85671c","name":"","server":"server","host":"","port":"10000","datamode":"stream","datatype":"buffer","newline":"","topic":"","base64":false,"x":160,"y":120,"wires":[["7049dcd.bbce624"]]},{"id":"7049dcd.bbce624","type":"function","z":"1b630406.85671c","name":"","func":"msg.payload = msg.payload.toString()\nreturn msg;\n","outputs":1,"noerr":0,"x":350,"y":120,"wires":[["3b8c65db.70cdda"]]},{"id":"3b8c65db.70cdda","type":"csv","z":"1b630406.85671c","name":"csv to json","sep":";","hdrin":"","hdrout":"","multi":"one","ret":"\\r","temp":"\"id0\",\"FechaFinMedida\",\"id\",\"FechaInicioMedida\",\"NumeroMolde\",\"Ramal\",\"MIN1\",\"MIN2\",\"MIN3\",\"MIN4\",\"MED1\",\"MED2\",\"MED3\",\"MED4\",\"MAX1\",\"MAX2\",\"MAX3\",\"MAX4\",\"OVAL1\",\"OVAL2\",\"OVAL3\",\"OVAL4\",\"NumLeidos1\",\"NumLeidos2\",\"NumLeidos3\",\"NumLeidos4\",\"RECH1\",\"RECH2\",\"RECH3\",\"RECH4\",\"CAV\"","skip":"0","strings":true,"x":530,"y":120,"wires":[["ed3e9582.7530f8"]]},{"id":"ed3e9582.7530f8","type":"function","z":"1b630406.85671c","name":"JSON format","func":"//node.log(\"Csv Readed converting to batch influx to send to mqtt.\");\nvar json=msg.payload;\nvar jsonsToInsert;\nvar i;\n\n\nvar fechajson = json.FechaFinMedida;\nvar splitDate = fechajson.split(\" \");\nvar date = splitDate[0].split(\"/\");\nvar timereplace= splitDate[1].replace(\",\",\":\");\nvar time = timereplace.split(\":\");\n\n// Obtenemos los campos individuales para todas las partes de la fecha\nvar dd = date[0];\nvar mm = date[1] - 1;\nvar yyyy = date[2];\nvar hh = time[0];\nvar min = time[1];\nvar ss = time[2];\nvar ms= time[3];\nvar moment = global.get('tzModule');\n\n// Creamos la fecha con Javascript\nvar fecha = new Date(yyyy, mm, dd, hh, min, ss);\nvar timestamp = moment(fecha).unix() + ms +'000000';\n//var timestamp = String(new Date(fecha).getTime() + ms + '000000')\nvar tags=[{\n\"NumeroMolde\": json.NumeroMolde,\n\"ramal\": json.Ramal\n}];\nvar fields = {\n\"id\": json.id,\n\"MIN1\": parseFloat(json.MIN1.trim().replace(',', '.')),\n\"MIN2\": parseFloat(json.MIN2.trim().replace(',', '.')),\n\"MIN3\": parseFloat(json.MIN3.trim().replace(',', '.')),\n\"MIN4\": parseFloat(json.MIN4.trim().replace(',', '.')),\n\"MED1\": parseFloat(json.MED1.trim().replace(',', '.')),\n\"MED2\": parseFloat(json.MED2.trim().replace(',', '.')),\n\"MED3\": parseFloat(json.MED3.trim().replace(',', '.')),\n\"MED4\": parseFloat(json.MED4.trim().replace(',', '.')),\n\"MAX1\": parseFloat(json.MAX1.trim().replace(',', '.')),\n\"MAX2\": parseFloat(json.MAX2.trim().replace(',', '.')),\n\"MAX3\": parseFloat(json.MAX3.trim().replace(',', '.')),\n\"MAX4\": parseFloat(json.MAX4.trim().replace(',', '.')),\n\"OVAL1\": parseFloat(json.OVAL1.trim().replace(',', '.')),\n\"OVAL2\": parseFloat(json.OVAL2.trim().replace(',', '.')),\n\"OVAL3\": parseFloat(json.OVAL3.trim().replace(',', '.')),\n\"OVAL4\": parseFloat(json.OVAL4.trim().replace(',', '.')),\n\"NumLeidos1\": json.NumLeidos1,\n\"NumLeidos2\": json.NumLeidos2,\n\"NumLeidos3\": json.NumLeidos3,\n\"NumLeidos4\": json.NumLeidos4,\n\"RECH1\": json.RECH1,\n\"RECH2\": json.RECH2,\n\"RECH3\": json.RECH3,\n\"RECH4\": json.RECH4,\n\"NumeroMolde\": json.NumeroMolde\n//\"NumeroMolde\": parseInt(json.NumeroMolde.trim())\n};\n\n//node.log(\"Sending Json to Mqtt Broker. Id: \" + JSON.stringify(fields[0].id) + \". Numero Molde: \" + JSON.stringify(tags[0].NumeroMolde) + \". Ramal: \" + JSON.stringify(tags[0].ramal) + \".\");\n\nmsg.payload = [{\n    //\"timestamp\": new Date(msg.serverTimestamp).getTime(),\n    \"timestamp\": timestamp,\n    \"measurement\": \"EspesoresVMA\",\n    \"tags\": {\n        \"CAV\": json.CAV,\n        \"ramal\": json.Ramal},\n    \"fields\": fields}];\n\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":120,"wires":[["d26ef410.2225d8"]]},{"id":"d26ef410.2225d8","type":"mqtt out","z":"1b630406.85671c","name":"Mqtt Out Espesores Json","topic":"EspesoresVMA","qos":"","retain":"","broker":"4baa5e4.56927a","x":950,"y":120,"wires":[]},{"id":"4baa5e4.56927a","type":"mqtt-broker","z":"","name":"Broker Linux Azure","broker":"10.50.2.99","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]